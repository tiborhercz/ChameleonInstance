AWSTemplateFormatVersion: "2010-09-09"
Description: "EC2 - SSM. ChameleonInstance is an instance which you can use for whatever you need loadtesting, pinging and so on."
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  SubnetId:
    Type: AWS::EC2::Subnet::Id

Mappings:
  RegionMap:
    eu-west-1:
      "AMI": "ami-0ed752ea0f62749af"

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for the ChameleonInstance
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
        # - IpProtocol: icmp
        #   FromPort: 8
        #   ToPort: -1
        #   CidrIp: 10.0.0.0/8
        # - IpProtocol: tcp
        #   FromPort: 443
        #   ToPort: 443
        #   CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: "Name"
          Value: "ChameleonInstance"

  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: "t3.small"
      ImageId:
        Fn::FindInMap:
          - "RegionMap"
          - Ref: "AWS::Region"
          - "AMI"
      IamInstanceProfile: !Ref Ec2InstanceProfile
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd-tools
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - !Ref SecurityGroup
          SubnetId: !Ref SubnetId
      Tags:
        - Key: "Name"
          Value: "ChameleonInstance"

  Ec2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref Ec2InstanceRole

  Ec2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ChameleonInstance
      Tags:
        - Key: "Name"
          Value: "ChameleonInstance"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        # The managed IAM policy AmazonSSMManagedInstanceCore grants access to Session Manager
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonEC2RoleforSSM
